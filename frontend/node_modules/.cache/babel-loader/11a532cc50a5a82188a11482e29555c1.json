{"ast":null,"code":"var _jsxFileName = \"/Users/aliaksandrzanouski/donut-chat/src/main/main.js\",\n    _s = $RefreshSig$();\n\nimport './main.css';\nimport FormInput from \"../components/FormInput\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    // birthday:'',\n    password: '',\n    confirmPassword: ''\n  });\n  const inputs = [{\n    id: 1,\n    name: 'username',\n    type: 'text',\n    // placeholder:'Username',\n    errorMessage: \"Username should be 3-16 characters and shouldn't inlude any special character!\",\n    label: 'Username',\n    pattern: '^[A-Za-z0-9]{3,16}$',\n    required: true\n  }, {\n    id: 2,\n    name: 'email',\n    type: 'email',\n    // placeholder:'Email',\n    errorMessage: 'It should be a valid email address',\n    label: 'Email',\n    required: true\n  }, // {\n  //     id: 3,\n  //     name:'birthday',\n  //     type:'date',\n  //     placeholder:'Birthday',\n  //     label:'Birthday'\n  // },\n  {\n    id: 4,\n    name: 'password',\n    type: 'password',\n    // placeholder:'Password',\n    errorMessage: 'Password should be 8-20 characters and include at least 1 letter, 1 number, 1 special character',\n    label: 'Password',\n    pattern: `^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[@$!%*#?&])[A-Za-z0-9@$!%*#?&]{8,20}$`,\n    required: true\n  }, {\n    id: 5,\n    name: 'confirmPassword',\n    type: 'password',\n    // placeholder:'Confirm Password',\n    errorMessage: \"Passwords don't match\",\n    label: 'Confirm Password',\n    pattern: values.password,\n    required: true\n  }];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const onChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  console.log(values);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-main\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, { ...input,\n        value: values[input.name],\n        onChange: onChange\n      }, input.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"Kyg0gbBFKU8LAHhaOQsziqRF3PU=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/aliaksandrzanouski/donut-chat/src/main/main.js"],"names":["FormInput","useState","Main","values","setValues","username","email","password","confirmPassword","inputs","id","name","type","errorMessage","label","pattern","required","handleSubmit","e","preventDefault","onChange","target","value","console","log","map","input"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAKA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAE;AAClCI,IAAAA,QAAQ,EAAC,EADyB;AAElCC,IAAAA,KAAK,EAAC,EAF4B;AAGlC;AACAC,IAAAA,QAAQ,EAAC,EAJyB;AAKlCC,IAAAA,eAAe,EAAC;AALkB,GAAF,CAApC;AAQA,QAAMC,MAAM,GAAG,CACX;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAC,UAFT;AAGIC,IAAAA,IAAI,EAAC,MAHT;AAII;AACAC,IAAAA,YAAY,EAAC,gFALjB;AAMIC,IAAAA,KAAK,EAAC,UANV;AAOIC,IAAAA,OAAO,EAAE,qBAPb;AAQIC,IAAAA,QAAQ,EAAE;AARd,GADW,EAWX;AACIN,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAC,OAFT;AAGIC,IAAAA,IAAI,EAAC,OAHT;AAII;AACAC,IAAAA,YAAY,EAAC,oCALjB;AAMIC,IAAAA,KAAK,EAAC,OANV;AAOIE,IAAAA,QAAQ,EAAE;AAPd,GAXW,EAoBX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIN,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAC,UAFT;AAGIC,IAAAA,IAAI,EAAC,UAHT;AAII;AACAC,IAAAA,YAAY,EAAC,iGALjB;AAMIC,IAAAA,KAAK,EAAC,UANV;AAOIC,IAAAA,OAAO,EAAG,sEAPd;AAQIC,IAAAA,QAAQ,EAAE;AARd,GA3BW,EAqCX;AACIN,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAC,iBAFT;AAGIC,IAAAA,IAAI,EAAC,UAHT;AAII;AACAC,IAAAA,YAAY,EAAC,uBALjB;AAMIC,IAAAA,KAAK,EAAC,kBANV;AAOIC,IAAAA,OAAO,EAAEZ,MAAM,CAACI,QAPpB;AAQIS,IAAAA,QAAQ,EAAE;AARd,GArCW,CAAf;;AAiDA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAIF,CAAD,IAAO;AACpBd,IAAAA,SAAS,CAAE,EAAC,GAAGD,MAAJ;AAAY,OAACe,CAAC,CAACG,MAAF,CAASV,IAAV,GAAiBO,CAAC,CAACG,MAAF,CAASC;AAAtC,KAAF,CAAT;AACH,GAFD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYrB,MAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BAEI;AAAM,MAAA,QAAQ,EAAEc,YAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKR,MAAM,CAACgB,GAAP,CAAYC,KAAD,iBACR,QAAC,SAAD,OAA8BA,KAA9B;AACW,QAAA,KAAK,EAAEvB,MAAM,CAACuB,KAAK,CAACf,IAAP,CADxB;AAEW,QAAA,QAAQ,EAAES;AAFrB,SAAgBM,KAAK,CAAChB,EAAtB;AAAA;AAAA;AAAA;AAAA,cADH,CAFL,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CArFD;;GAAMR,I;;KAAAA,I;AAuFN,eAAeA,IAAf","sourcesContent":["import './main.css'\nimport FormInput from \"../components/FormInput\";\nimport {useState} from 'react';\n\n\n\n\nconst Main = () => {\n    const [values, setValues] = useState ({\n        username:'',\n        email:'',\n        // birthday:'',\n        password:'',\n        confirmPassword:'',\n    });\n\n    const inputs = [\n        {\n            id: 1,\n            name:'username',\n            type:'text',\n            // placeholder:'Username',\n            errorMessage:\"Username should be 3-16 characters and shouldn't inlude any special character!\",\n            label:'Username',\n            pattern: '^[A-Za-z0-9]{3,16}$',\n            required: true\n        },\n        {\n            id: 2,\n            name:'email',\n            type:'email',\n            // placeholder:'Email',\n            errorMessage:'It should be a valid email address',\n            label:'Email',\n            required: true\n        },\n        // {\n        //     id: 3,\n        //     name:'birthday',\n        //     type:'date',\n        //     placeholder:'Birthday',\n        //     label:'Birthday'\n        // },\n        {\n            id: 4,\n            name:'password',\n            type:'password',\n            // placeholder:'Password',\n            errorMessage:'Password should be 8-20 characters and include at least 1 letter, 1 number, 1 special character',\n            label:'Password',\n            pattern: `^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[@$!%*#?&])[A-Za-z0-9@$!%*#?&]{8,20}$`,\n            required: true\n        },\n        {\n            id: 5,\n            name:'confirmPassword',\n            type:'password',\n            // placeholder:'Confirm Password',\n            errorMessage:\"Passwords don't match\",\n            label:'Confirm Password',\n            pattern: values.password,\n            required: true\n        }\n    ];\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    }\n\n    const onChange = (e) => {\n        setValues( {...values, [e.target.name]: e.target.value });\n    }\n\n    console.log(values);\n\n    return (\n        <div className='container-main'>\n\n            <form onSubmit={handleSubmit}>\n                <h2>Create Account</h2>\n                {inputs.map((input)=>\n                    <FormInput key={input.id} {...input}\n                               value={values[input.name]}\n                               onChange={onChange}\n                    />\n                )}\n\n                <button>Submit</button>\n            </form>\n\n        </div>\n    );\n};\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}